openapi: 3.1.0
info:
  title: Project API
  version: 1.0.0
  description: API for user authentication, workflow management, and webhook handling.
servers:
  - url: http://localhost:5000
    description: Development server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid input or user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/login:
    post:
      summary: Login and receive access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  user_id:
                    type: integer
                  email:
                    type: string
        '400':
          description: Missing credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/me:
    get:
      summary: Get current user info
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
                
  /api/connectors/definitions:
    get:
      summary: Get all connector definitions
      responses:
        '200':
          description: List of connector definitions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConnectorDefinition'
        '404':
          description: No connector definitions found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/connectors/definitions/{connector_key}/triggers:
    get:
      summary: Get trigger definitions for a connector
      parameters:
        - in: path
          name: connector_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trigger definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TriggerDefinition'
        '404':
          description: Connector not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/connectors/definitions/{connector_key}/actions:
    get:
      summary: Get action definitions for a connector
      parameters:
        - in: path
          name: connector_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Action definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionDefinition'
        '404':
          description: Connector not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/connectors/:
    get:
      summary: Get connectors for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User connectors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Connector'

  /api/connectors/status/{connector_key}:
    get:
      summary: Check connection status for a connector
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: connector_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Connection status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStatus'


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserCredentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    UserInfo:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          
    ConnectorDefinition:
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        display_name:
          type: string
        description:
          type: string
        auth_type:
          type: string
        connector_config_schema:
          type: object
        logo_url:
          type: string
          

    TriggerDefinition:
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        display_name:
          type: string
        description:
          type: string
        config_schema:
          type: object
        output_schema:
          type: object
        requires_webhook_endpoint:
          type: boolean
        service_key:
          type: string
        service_display_name:
          type: string

    ActionDefinition:
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        display_name:
          type: string
        description:
          type: string
        config_schema:
          type: object
        input_schema:
          type: object
        output_schema:
          type: object
        service_key:
          type: string
        service_display_name:
          type: string
          
    Connector:
      type: object
      properties:
        id:
          type: integer
        connector_key:
          type: string
        connection_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          
    ConnectionStatus:
      type: object
      properties:
        connected:
          type: boolean
        id:
          type: integer
        connection_name:
          type: string
        connector_key:
          type: string
          
    SuccessResponse:
      type: object
      properties:
        msg:
          type: string

    ErrorResponse:
      type: object
      properties:
        err:
          type: string